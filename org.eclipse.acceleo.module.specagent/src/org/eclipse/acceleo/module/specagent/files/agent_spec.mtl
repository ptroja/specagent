
[comment encoding = UTF-8 /]
[module agent_spec('http://multirobotsystem/1.0')/]

[template public agent_spec(anAgent : Agent)]
	
[comment @main /]
[file (anAgent.name.concat('.ads'), false, 'UTF-8')]
with [anAgent.name/]_agent_buffers; use [anAgent.name/]_agent_buffers;

package [anAgent.name/]_agent is
   -- This is remote interface to the agent
   pragma Remote_Call_Interface;

   -- remote access to the input buffers
   [for (aSensor : Sensor | sensors)]
   package sensor_[aSensor.name/] is
      [for (aInputBuffer : InputBuffer | aSensor.inputs)]
      package [aInputBuffer.name/] is
         procedure Send(item : in [aInputBuffer.name/]_t);
      end [aInputBuffer.name/];
      [/for]
   end sensor_[aSensor.name/];
   [/for]

   [for (anEffector : Effector | effector)]
   package effector_[anEffector.name/] is
      [for (aInputBuffer : InputBuffer | anEffector.inputs)]
      package [aInputBuffer.name/] is
         procedure Send(item : in [aInputBuffer.name/]_t);
      end [aInputBuffer.name/];
      [/for]
   end effector_[anEffector.name/];
   [/for]

   [for (aTransmitter : Transmitter | transmitters)]
   package transmitter_[aTransmitter.name/] is
      [for (aInputBuffer : InputBuffer | aTransmitter.inputs)]
      package [aInputBuffer.name/] is
         procedure Send(item : in [aInputBuffer.name/]_t);
      end [aInputBuffer.name/];
      [/for]
   end transmitter_[aTransmitter.name/];
   [/for]

private
   [if (transmitters.inputs->size() > 0 or sensors.inputs->size() > 0 or effector.inputs->size() > 0)] 
   -- Buffer identifiers
   type buffer_id is (
      X1,X2
   );

   -- Status of the particular buffers
   type fresh_status_t is array (buffer_id) of Boolean;
   [/if]
end [anAgent.name/]_agent;
[/file]
	
[/template]
